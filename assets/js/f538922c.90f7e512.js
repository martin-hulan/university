"use strict";(self.webpackChunkuniversity=self.webpackChunkuniversity||[]).push([[6487],{489:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=i(5893),l=i(1151);const r={sidebar_position:1,sidebar_label:"Formula fields",title:"Rossum Formulas: Formula fields"},s="Formula fields",a={id:"learn/rossum-formulas/formula-fields",title:"Rossum Formulas: Formula fields",description:"Examples of common formula fields (using Formula Fields flavor).",source:"@site/docs/learn/rossum-formulas/formula-fields.md",sourceDirName:"learn/rossum-formulas",slug:"/learn/rossum-formulas/formula-fields",permalink:"/docs/learn/rossum-formulas/formula-fields",draft:!1,unlisted:!1,editUrl:"https://github.com/rossumai/university/tree/master/docs/learn/rossum-formulas/formula-fields.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Formula fields",title:"Rossum Formulas: Formula fields"},sidebar:"learnSidebar",previous:{title:"Rossum Formulas",permalink:"/docs/learn/rossum-formulas/"},next:{title:"Serverless functions",permalink:"/docs/learn/rossum-formulas/serverless-functions"}},o={},d=[{value:"Copy fields conditionally",id:"copy-fields-conditionally",level:2},{value:"Find first non-empty line item value",id:"find-first-non-empty-line-item-value",level:2},{value:"Generate NetSuite external IDs",id:"generate-netsuite-external-ids",level:2},{value:"Normalize field value",id:"normalize-field-value",level:2},{value:"Validations",id:"validations",level:2}];function m(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"formula-fields",children:"Formula fields"}),"\n",(0,t.jsx)(n.p,{children:"Examples of common formula fields (using Formula Fields flavor)."}),"\n",(0,t.jsx)(n.h2,{id:"copy-fields-conditionally",children:"Copy fields conditionally"}),"\n",(0,t.jsxs)(n.p,{children:["Copy ",(0,t.jsx)(n.code,{children:"order_id"})," into another field but prioritize ",(0,t.jsx)(n.code,{children:"order_id_manual"})," datapoint if it exists:"]}),"\n",(0,t.jsxs)(n.p,{children:["New formula field ",(0,t.jsx)(n.code,{children:"order_id_normalized"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"field.order_id_manual if not is_empty(field.order_id_manual) else field.order_id\n"})}),"\n",(0,t.jsx)(n.h2,{id:"find-first-non-empty-line-item-value",children:"Find first non-empty line item value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'next((item for item in field.item_code.all_values if item), "")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"generate-netsuite-external-ids",children:"Generate NetSuite external IDs"}),"\n",(0,t.jsxs)(n.p,{children:["Create external ID needed by NetSuite for ",(0,t.jsx)(n.em,{children:"VendorBill"})," and ",(0,t.jsx)(n.em,{children:"VendorCredit"})," records:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"# Convert document type to lower case for standardization\ndocument_type = field.document_type.lower()\n\n# Create an external ID by combining document ID and entity (vendor) match\nexternal_id = f\"{field.document_id}_{field.ns_entity_match}\"\n\n# Map of document types to their corresponding prefixes\nprefix_map = {\n    'credit_note': '__rossum_vc_',\n    'tax_invoice': '__rossum_vb_'\n}\n\n# Retrieve the prefix for the document type, default to a general prefix if not found\nprefix = prefix_map.get(document_type, '__rossum_')\n\n# Construct the final result by concatenating prefix and external ID\nresult = f\"{prefix}{external_id}\"\n\nresult\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is typically necessary when ",(0,t.jsx)(n.a,{href:"../netsuite/export-configuration#vendor-bills-invoices",children:"exporting records into NetSuite"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"normalize-field-value",children:"Normalize field value"}),"\n",(0,t.jsx)(n.p,{children:'Remove non-alphanumeric characters (except "-" and "_"):'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'substitute(r"[^a-zA-Z\\d\\-_]", "", field.order_id)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"validations",children:"Validations"}),"\n",(0,t.jsxs)(n.p,{children:["To validate line items, create ",(0,t.jsx)(n.code,{children:"item_validator"})," formula field with the following code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import math\n\nitem_total_base_calculated = field.item_quantity * field.item_amount_base\n\nif not math.isclose(item_total_base_calculated, field.item_total_base, rel_tol=0.004):\n    item_total_base_diff = abs(item_total_base_calculated - field.item_total_base)\n    message = (f"The totals do not match. Expected total: {field.item_total_base}, "\n               f"Calculated total: {item_total_base_calculated}, "\n               f"Difference: {item_total_base_diff}")\n\n    show_error(message, field.item_quantity)\n    show_error(message, field.item_amount_base)\n    show_error(message, field.item_total_base)\n'})})]})}function c(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var t=i(7294);const l={},r=t.createContext(l);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);