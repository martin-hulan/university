"use strict";(self.webpackChunkuniversity=self.webpackChunkuniversity||[]).push([[8801],{1718:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=t(5893),r=t(1151);const o={title:"NetSuite: Postman collection",sidebar_position:5,sidebar_label:"Postman collection"},i="Postman collection",a={id:"learn/netsuite/postman",title:"NetSuite: Postman collection",description:"It might be useful to call NetSuite using Postman for testing purposes. Follow the guide on this page to be able to send requests directly to NetSuite.",source:"@site/docs/learn/netsuite/postman.md",sourceDirName:"learn/netsuite",slug:"/learn/netsuite/postman",permalink:"/docs/learn/netsuite/postman",draft:!1,unlisted:!1,editUrl:"https://github.com/rossumai/university/tree/master/docs/learn/netsuite/postman.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"NetSuite: Postman collection",sidebar_position:5,sidebar_label:"Postman collection"},sidebar:"learnSidebar",previous:{title:"Considerations & Limitations",permalink:"/docs/learn/netsuite/considerations"},next:{title:"REST API export",permalink:"/docs/learn/rest-api-export/"}},c={},l=[{value:"SOAP requests",id:"soap-requests",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"postman-collection",children:"Postman collection"}),"\n",(0,s.jsx)(n.p,{children:"It might be useful to call NetSuite using Postman for testing purposes. Follow the guide on this page to be able to send requests directly to NetSuite."}),"\n",(0,s.jsx)(n.h2,{id:"soap-requests",children:"SOAP requests"}),"\n",(0,s.jsx)(n.p,{children:'First, create a new Postman collection and use the following "Pre-req" script:'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const account = pm.environment.get('account');\nconst consumerKey = pm.environment.get('consumer_key');\nconst consumerSecret = pm.environment.get('consumer_secret');\nconst tokenKey = pm.environment.get('token_key');\nconst tokenSecret = pm.environment.get('token_secret');\n\nconst timestamp = Math.floor(Date.now() / 1000).toString();\nconst nonce = CryptoJS.lib.WordArray.random(10).toString();\nconst baseString = `${account}&${consumerKey}&${tokenKey}&${nonce}&${timestamp}`;\nconst key = `${consumerSecret}&${tokenSecret}`;\nconst signature = CryptoJS.HmacSHA256(baseString, key).toString(CryptoJS.enc.Base64);\n\npm.environment.set('signature', signature);\npm.environment.set('nonce', nonce);\npm.environment.set('timestamp', timestamp);\n"})}),"\n",(0,s.jsx)(n.p,{children:"This script is necessary for signing all outgoing SOAP requests. It also implies that the following environment variables must be set:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"account"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"consumer_key"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"consumer_secret"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"token_key"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"token_secret"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"It will in return create the following environment variables (to be used later in our request):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"signature"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nonce"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"timestamp"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Next, create a new ",(0,s.jsx)(n.code,{children:"POST"})," request in the created collection. Apart from the default headers, the request should have this NetSuite header (value depends on the request action):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"SOAPAction: upsert\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Depending on your NetSuite version and account number, the ",(0,s.jsx)(n.code,{children:"POST"})," request URL can look like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"https://123-sb1.suitetalk.api.netsuite.com/services/NetSuitePort_2023_2\n"})}),"\n",(0,s.jsx)(n.p,{children:"And finally, the SOAP request body (raw XML). In this case to upsert a Vendor Bill record in NetSuite (notice the environment variables from above):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<soapenv:Envelope xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n    <soapenv:Header>\n        <tokenPassport>\n            <account>{{account}}</account>\n            <consumerKey>{{consumer_key}}</consumerKey>\n            <token>{{token_key}}</token>\n            <nonce>{{nonce}}</nonce>\n            <timestamp>{{timestamp}}</timestamp>\n            <signature algorithm="HMAC-SHA256">{{signature}}</signature>\n        </tokenPassport>\n        <platformMsg:preferences soapenv:mustUnderstand="0" soapenv:actor="http://schemas.xmlsoap.org/soap/actor/next" xmlns:platformMsg="urn:messages_2023_2.platform.webservices.netsuite.com">\n            <platformMsg:useConditionalDefaultsOnAdd>true</platformMsg:useConditionalDefaultsOnAdd>\n            <platformMsg:ignoreReadOnlyFields>true</platformMsg:ignoreReadOnlyFields>\n            <platformMsg:warningAsError>false</platformMsg:warningAsError>\n            <platformMsg:runServerSuiteScriptAndTriggerWorkflows>true</platformMsg:runServerSuiteScriptAndTriggerWorkflows>\n        </platformMsg:preferences>\n    </soapenv:Header>\n    <soapenv:Body>\n        <ns0:upsert xmlns:ns0="urn:messages_2023_2.platform.webservices.netsuite.com">\n            <ns0:record xsi:type="ns169:VendorBill" externalId="__CHANGE_ME__" xmlns:ns169="urn:purchases_2023_2.transactions.webservices.netsuite.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n                <ns1:customForm type="customRecord" internalId="__CHANGE_ME__" xmlns:ns1="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns2:entity type="vendor" internalId="__CHANGE_ME__" xmlns:ns2="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns3:subsidiary type="subsidiary" internalId="__CHANGE_ME__" xmlns:ns3="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns4:approvalStatus internalId="2" xmlns:ns4="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns5:tranDate xmlns:ns5="urn:purchases_2023_2.transactions.webservices.netsuite.com">2024-12-24T00:00:00</ns5:tranDate>\n                <ns6:tranId xmlns:ns6="urn:purchases_2023_2.transactions.webservices.netsuite.com">__CHANGE_ME__</ns6:tranId>\n                <ns7:currency type="currency" internalId="1" xmlns:ns7="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns8:class type="classification" internalId="__CHANGE_ME__" xmlns:ns8="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns9:department type="department" internalId="__CHANGE_ME__" xmlns:ns9="urn:purchases_2023_2.transactions.webservices.netsuite.com"/>\n                <ns10:itemList replaceAll="true" xmlns:ns10="urn:purchases_2023_2.transactions.webservices.netsuite.com">\n                    <ns10:item>\n                        <ns10:item type="inventoryItem" internalId="__CHANGE_ME__"/>\n                        <ns10:taxCode type="taxType" internalId="__CHANGE_ME__"/>\n                        <ns10:quantity>1</ns10:quantity>\n                        <ns10:rate>__CHANGE_ME__</ns10:rate>\n                        <ns10:amount>__CHANGE_ME__</ns10:amount>\n                        <ns10:grossAmt>__CHANGE_ME__</ns10:grossAmt>\n                        <ns10:tax1Amt>__CHANGE_ME__</ns10:tax1Amt>\n                        <ns10:description>__CHANGE_ME__</ns10:description>\n                        <ns10:department type="department" internalId="__CHANGE_ME__"/>\n                        <ns10:class type="classification" internalId="__CHANGE_ME__"/>\n                        <ns10:location type="location" internalId="__CHANGE_ME__"/>\n                    </ns10:item>\n                </ns10:itemList>\n            </ns0:record>\n        </ns0:upsert>\n    </soapenv:Body>\n</soapenv:Envelope>\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(7294);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);